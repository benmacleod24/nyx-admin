[
  {
    "ContainingType": "api.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginData",
        "Type": "api.DTOs.Request.LoginBodyDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/auth/logout",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.AuthController",
    "Method": "RefreshAuth",
    "RelativePath": "api/auth/refresh",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.AuthController",
    "Method": "RegisterUser",
    "RelativePath": "api/auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userData",
        "Type": "api.DTOs.Request.CreateUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.LogsController",
    "Method": "CreateLog",
    "RelativePath": "api/logs",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "logData",
        "Type": "api.DTOs.Request.CreateLogDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.LogsController",
    "Method": "GetAllLogs",
    "RelativePath": "api/logs",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Size",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.LogsController",
    "Method": "GetLogById",
    "RelativePath": "api/logs/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "api.DTOs.Response.LogDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "api.Controllers.LogsController",
    "Method": "GetMetadataKeys",
    "RelativePath": "api/logs/metadata/keys",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "api.Controllers.LogsController",
    "Method": "SearchLogs",
    "RelativePath": "api/logs/search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "api.DTOs.Request.SearchLogsDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "api.DTOs.Response.PaginationResponseDTO\u00601[[api.DTOs.Response.LogDTO, api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "api.Controllers.PermissionsController",
    "Method": "GetUserPermissions",
    "RelativePath": "api/permissions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.PlayersController",
    "Method": "GetPlayerByCitizenId",
    "RelativePath": "api/players/{citizenId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "citizenId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "api.DTOs.Response.PlayerDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "api.Controllers.PlayersController",
    "Method": "SearchPlayers",
    "RelativePath": "api/players/search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "api.DTOs.Request.SearchPlayersDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[api.DTOs.Response.PlayerDTO, api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "api.Controllers.RolesController",
    "Method": "GetAllRoles",
    "RelativePath": "api/roles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.RolesController",
    "Method": "CreateRole",
    "RelativePath": "api/roles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleData",
        "Type": "api.DTOs.Request.CreateRoleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.RolesController",
    "Method": "GetRoleByKey",
    "RelativePath": "api/roles/{roleKey}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleKey",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.RolesController",
    "Method": "UpdateRole",
    "RelativePath": "api/roles/{roleKey}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleKey",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "updatedRole",
        "Type": "api.DTOs.Request.UpdateRoleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.RolesController",
    "Method": "DeleteRole",
    "RelativePath": "api/roles/{roleKey}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleKey",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.RolesController",
    "Method": "GetRolePermissions",
    "RelativePath": "api/roles/{roleKey}/permissions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleKey",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.RolesController",
    "Method": "UpdateRoleOrder",
    "RelativePath": "api/roles/update-order",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleUpates",
        "Type": "System.Collections.Generic.List\u00601[[api.DTOs.Request.UpdateRoleOrderDTO, api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.TableColumnsController",
    "Method": "GetTableColumns",
    "RelativePath": "api/tablecolumns/{tableKey}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tableKey",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[api.Models.UITableColumn, api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "api.Controllers.UserController",
    "Method": "GetUserPermissions",
    "RelativePath": "api/user/permissions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.UsersController",
    "Method": "GetAllUsers",
    "RelativePath": "api/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.UsersController",
    "Method": "UpdateUser",
    "RelativePath": "api/users/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedUser",
        "Type": "api.DTOs.Request.UpdateUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]