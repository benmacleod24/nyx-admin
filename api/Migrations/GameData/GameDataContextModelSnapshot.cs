// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Models.Game;

#nullable disable

namespace api.Migrations.GameData
{
    [DbContext(typeof(GameDataContext))]
    partial class GameDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_uca1400_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Game.Ban", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bannedby")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("bannedby")
                        .HasDefaultValueSql("'LeBanhammer'");

                    b.Property<string>("Discord")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("discord");

                    b.Property<int?>("Expire")
                        .HasColumnType("int(11)")
                        .HasColumnName("expire");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ip");

                    b.Property<string>("License")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("license");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Reason")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Discord" }, "discord");

                    b.HasIndex(new[] { "Ip" }, "ip");

                    b.HasIndex(new[] { "License" }, "license");

                    b.ToTable("bans");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("api.Models.Game.Player", b =>
                {
                    b.Property<string>("Citizenid")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("citizenid");

                    b.Property<string>("Charinfo")
                        .HasColumnType("text")
                        .HasColumnName("charinfo");

                    b.Property<int?>("Cid")
                        .HasColumnType("int(11)")
                        .HasColumnName("cid");

                    b.Property<int>("CrmAvatarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("crm_avatar_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("CrmCk")
                        .HasColumnType("int(11)")
                        .HasColumnName("crm_ck");

                    b.Property<int>("CrmFavorite")
                        .HasColumnType("int(11)")
                        .HasColumnName("crm_favorite");

                    b.Property<string>("CrmIsPremium")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("crm_is_premium")
                        .HasDefaultValueSql("'0'");

                    b.Property<int>("CrmSlot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("crm_slot")
                        .HasDefaultValueSql("-1");

                    b.Property<string>("CrmTattoos")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("crm_tattoos")
                        .HasDefaultValueSql("''");

                    b.Property<string>("CryptoWalletId")
                        .HasColumnType("text")
                        .HasColumnName("crypto_wallet_id");

                    b.Property<string>("Cryptocurrency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasColumnName("cryptocurrency")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Gang")
                        .HasColumnType("text")
                        .HasColumnName("gang");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Inside")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("inside")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Inventory")
                        .HasColumnType("longtext")
                        .HasColumnName("inventory");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("job");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("last_updated")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("LastUpdated"));

                    b.Property<string>("License")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("license");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("metadata");

                    b.Property<string>("Money")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("money");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("position");

                    b.HasKey("Citizenid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id");

                    b.HasIndex(new[] { "LastUpdated" }, "last_updated");

                    b.HasIndex(new[] { "License" }, "license")
                        .HasDatabaseName("license1");

                    b.ToTable("players");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });
#pragma warning restore 612, 618
        }
    }
}
